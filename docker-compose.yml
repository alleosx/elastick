version: '3.8'

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    environment:
      - discovery.type=single-node
    networks:
      - ingress
    volumes:
      - esdata:/usr/share/elasticsearch/data
      # - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml 
    ports:
      - 9200:9200
    expose:
      - 9200

  kibana:
    image: docker.elastic.co/kibana/kibana:7.8.0
    networks:
      - ingress
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  fluentd:
    image: custom-fluentd:v1
    container_name: fluentd
    volumes:
      - /var/log:/var/log
      - ./fluentd:/etc/td-agent
      - ./fluentd/fluent.conf:/fluentd/etc/fluent.conf
      - fluentd_logs:/fluentd/log
    ports:
      # - "24224:24224"
      # - "24224:24224/udp"
      - 1514:1514 
      - 1514:1514/udp
    depends_on:
      - elasticsearch
      - kibana
    networks:
      - ingress

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - 9090:9090
    networks:
      - ingress

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - ingress

  nginx_exporter:
    image: nginx/nginx-prometheus-exporter:latest
    ports:
      - "9113:9113"
    command:
      - -nginx.scrape-uri
      - http://kanban-ui:80/stub_status
    networks:
      - ingress

  node_exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    networks:
      - ingress

  postgres_exporter:
    image: wrouesnel/postgres_exporter:latest
    environment:
      DATA_SOURCE_NAME: "postgresql://username:password@host:port/dbname"
    networks:
      - ingress

  kanban-postgres:
    image: postgres:14.12-bullseye
    container_name: kanban-postgres
    environment:
      - POSTGRES_DB=kanban
      - POSTGRES_USER=kanban
      - POSTGRES_PASSWORD=kanban
    volumes:
      - kanban-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - ingress

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=mail@test.com
      - PGADMIN_DEFAULT_PASSWORD=kanban
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - ingress

  kanban-app:
    build: ./kanban-app
    container_name: kanban-app
    environment:
      - DB_SERVER=kanban-postgres
      - POSTGRES_DB=kanban
      - POSTGRES_USER=kanban
      - POSTGRES_PASSWORD=kanban
    ports:
      - "8080:8080"
    depends_on:
      - kanban-postgres
    networks:
      - ingress

  kanban-ui:
    build: ./kanban-ui
    container_name: kanban-ui
    ports:
      - "4200:80"
    depends_on:
      - kanban-app
    networks:
      - ingress

  reverse-proxy:
    image: nginx
    container_name: reverse-proxy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      # - ./default.conf:/etc/nginx/conf.d/default.conf
      - ./json_log:/etc/nginx/conf.d/json_log
    ports:
      - "80:80"
    depends_on:
      - kanban-postgres
      - kanban-ui
      - kanban-app
      - pgadmin
      - prometheus
      - grafana
      - kibana
    networks:
      - ingress

volumes:
  esdata:
    driver: local
  kanban-data:
  pgadmin-data:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  fluentd_logs:

networks:
  ingress:
    driver: bridge
